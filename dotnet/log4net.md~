##作用
提供一个记录日志的框架，可以将日志信息记录到文件、控制台、Windows事件日志和数据库（MSSQL、Acess、Oracle、DB2和SQLite等）。<br/>

## 示例
config配置文件<br/>
````
<?xml version="1.0" encoding="utf-8"?>
<configuration>
<configSections>
  <section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
</configSections>
<log4net>
  <!-- 定义日志的输出媒介 -->
  <root>
    <appender-ref ref="ConsoleAppender"/>
    <appender-ref ref="R"/>
  </root>
  <!-- 定义输出到控制台 -->
  <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
    <layout type="log4net.Layout.PatternLayout">
	<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
    </layout> 
  </appender>
  <!-- 定义输出到日志文件 -->
  <appender name="R" type="log4net.Appender.FileAppender" rollingStyle="Date" datePattern="yyyyMMdd-HH:mm:ss">
    <file value="logs/log.txt"></file>
    <appendToFile value="true"></appendToFile>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%-d{yyyy-MM-dd HH\:mm\:ss}  [%L] [%c]-[%p] %m%n"></conversionPattern> 
    </layout>
  </appender>
</log4net>
</configuration>
````
.cs文件<br/>
````
/**
 * 指定log4net使用.config文件来读取配置信息
 * 若为Winform（假定程序为Demo.exe）, 那么配置文件则为Demo.exe.config
 * 若为Webform，则为web.config
 */
[assembly:log4net.Config.XmlConfigurator(Watch=true)]
namespace Demo{
  public class MainClass{
    public static void Main(String[] args){
	ILog log = log4net.LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);
        log.Error("error", new Exception("there is an exception"));
        log.Fatal("fatal", new Exception("there is a deadly exception occurs"));
	log.Info("info");
	log.Debug("debug");
	log.Warn("warn");
	Console.Read();
    }
  }
}
````

##在config文件中配置
在`<configuration>`节点下添加`<configSections>`节点<br/>
````
<configSections>
  <section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
</configSections>
````
只有添加上述节点，log4net.dll才能读取config文件下`<log4net>节点`下配置信息<br/>

## 框架的核心组件
**1. Appender**<br/>
作用：用于定义日志信息的输出介质（文件、控制台、Windows事件日志和数据库（MSSQL、Acess、Oracle、DB2和SQLite等））<br/>
内置的Appdner组件:<br/>
`ConsoleAppender`，输出介质为控制台<br/>
`FileAppender`，输出介质为文件<br/>
`EventLogAppender`，输出介质为系统日志<br/>
`AdoNetAppender`，输出介质为数据库<br/>
自定义Appender时，需要继承`log4net.Appender.AppenderSkeleton`<br/>
**2. Layout**<br/>
作用：定义向用户显示最终的经格式化的输出信息。<br/>
**注意：一个Appender对象仅能对应一个Layout对象**<br/>
内容的Layout组件:<br/>
`PatternLayout`，用户自定义格式<br/>
参数<br/>
`%m`(message),输出的日志消息<br/>
`%n`(newline),换行<br/>
`%d`(datetime),输出当前语句运行的时刻<br/>
`%r`(runtime),输出程序从运行到当前语句时消耗的毫秒数<br/>
`%t`(thread id),输出当前语句运行的线程ID<br/>
`%p`(level),输出日志级别（日志事件）<br/>
`%c`(class),输出当前语句所在的对象名称<br/>
`%M`(method),输出当前语句所在的方法名称<br/>
`%f`(file),输出当前语句所在的文件名称<br/>
`%L`(line),输出当前语句位于所在的文件中的行号<br/>
`%l`(location),输出当前语句位于的全限定类名，以及源文件和行号<br/>
`%数字`,表示该项的最小长度，如果不够则在左边用空格填充。如：`%5p`,表示输出日志级别，且长度最小为5个字符<br/>
`%-数字`,表示该项的最小长度，如果不够则在右边用空格填充。如：`%-5p`,表示输出日志级别，且长度最小为5个字符<br/>
`%.数字`,表示该项的最大长度，如果超出则截断<br/>
`%数字.数字`,表示该项的必须位于最小和最大长度之间，如果超出则截断, 不够则用空格填充<br/>
**最佳实践**<br/>
````
````

`SimpleLayout`，<br/>
`ExceptionLayout`，输出时包含Message和Trace信息。Logger方法必须传入Exception对象，否则什么都不输出。<br/>
`XmlLayout`，中文会有问题<br/>
自定义Layout时，需要继承`log4net.Layout.LayoutSkeleton`<br/>

**3. Appender Filter**<br/>
作用：默认情况下Appender对象会将所有日志信息都输出到相应的介质中，通过Appender Filter对象（命令空间：log4net.Filter）可以按照不同的标准过滤日志事件或内容。<br/>
内置的Filter组件：<br/>
`DenyAllFilter`，阻止所有的日志事件被记录<br/>
`LevelMatchFilter`，只有指定等级的日志事件才被记录<br/>
`LevelRangeFilter`，日志等级在指定范围内的事件才被记录<br/>
`LoggerMatchFilter`，Logger名称匹配才被记录<br>
`PropertyFilter`，消息匹配指定的属性值才被记录<br/>
`StringMatchFilter`，消息匹配指定的字符串才被记录<br/>

**4. Logger**<br/>
作用：直接与应用交互的组件，用于触发日志事件<br/>
级别（日志事件）     优先级<br/>
OFF                    6<br/>
FATAL                  5<br/>
ERROR                  4<br/>
WARN                   3<br/>
INFO       	       2<br/>
DEBUG                  1<br/>
ALL                    0<br/>

**5. Object Render**<br/>
作用：输出根据Layout格式化的日志消息。Render必须实现log4net.ObjectRender.IObjectRender接口<br/>
**6. Repository**<br/>
作用：负责日志对象组织结构的维护。对于非框架扩展者，几乎不会用到该组件。<br/>

## 配置方式
1. 代码中配置<br/>
2. 配置文件(推荐)<br/>
  log4net框架会在`AppDomain.CurrentDomain.BaseDirectory`指向的目录路径下查找配置文件。

## 参考
http://www.cnblogs.com/jams742003/archive/2009/12/10/1620861.html
