Classfile /F:/skyDrive/repos/self/jottings/java/sample/03/Main.class
  Last modified 2015-2-12; size 927 bytes
  MD5 checksum 2de4c316b30b170264c76516ab1882e2
  Compiled from "Main.java"
class Main
  SourceFile: "Main.java"
  InnerClasses:
       static #14= #4 of #2; //S=class Main$S of class Main
       static #16= #10 of #2; //P=class Main$P of class Main
  minor version: 0
  major version: 51
  flags: ACC_SUPER
Constant pool:
   #1 = Methodref          #13.#33        //  java/lang/Object."<init>":()V
   #2 = Class              #34            //  Main
   #3 = Methodref          #2.#33         //  Main."<init>":()V
   #4 = Class              #35            //  Main$S
   #5 = Methodref          #2.#36         //  Main.get:(Ljava/lang/Class;)LMain$P;
   #6 = Fieldref           #37.#38        //  java/lang/System.out:Ljava/io/PrintStream;
   #7 = Fieldref           #10.#39        //  Main$P.i:I
   #8 = Methodref          #40.#41        //  java/io/PrintStream.println:(I)V
   #9 = Methodref          #42.#43        //  java/lang/Class.newInstance:()Ljava/lang/Object;
  #10 = Class              #44            //  Main$P
  #11 = Class              #45            //  java/lang/InstantiationException
  #12 = Class              #46            //  java/lang/IllegalAccessException
  #13 = Class              #47            //  java/lang/Object
  #14 = Utf8               S
  #15 = Utf8               InnerClasses
  #16 = Utf8               P
  #17 = Utf8               <init>
  #18 = Utf8               ()V
  #19 = Utf8               Code
  #20 = Utf8               LineNumberTable
  #21 = Utf8               main
  #22 = Utf8               ([Ljava/lang/String;)V
  #23 = Utf8               get
  #24 = Utf8               (Ljava/lang/Class;)LMain$P;
  #25 = Utf8               StackMapTable
  #26 = Class              #48            //  java/lang/Class
  #27 = Class              #44            //  Main$P
  #28 = Class              #49            //  java/lang/ReflectiveOperationException
  #29 = Utf8               Signature
  #30 = Utf8               <T:LMain$P;>(Ljava/lang/Class<TT;>;)TT;
  #31 = Utf8               SourceFile
  #32 = Utf8               Main.java
  #33 = NameAndType        #17:#18        //  "<init>":()V
  #34 = Utf8               Main
  #35 = Utf8               Main$S
  #36 = NameAndType        #23:#24        //  get:(Ljava/lang/Class;)LMain$P;
  #37 = Class              #50            //  java/lang/System
  #38 = NameAndType        #51:#52        //  out:Ljava/io/PrintStream;
  #39 = NameAndType        #53:#54        //  i:I
  #40 = Class              #55            //  java/io/PrintStream
  #41 = NameAndType        #56:#57        //  println:(I)V
  #42 = Class              #48            //  java/lang/Class
  #43 = NameAndType        #58:#59        //  newInstance:()Ljava/lang/Object;
  #44 = Utf8               Main$P
  #45 = Utf8               java/lang/InstantiationException
  #46 = Utf8               java/lang/IllegalAccessException
  #47 = Utf8               java/lang/Object
  #48 = Utf8               java/lang/Class
  #49 = Utf8               java/lang/ReflectiveOperationException
  #50 = Utf8               java/lang/System
  #51 = Utf8               out
  #52 = Utf8               Ljava/io/PrintStream;
  #53 = Utf8               i
  #54 = Utf8               I
  #55 = Utf8               java/io/PrintStream
  #56 = Utf8               println
  #57 = Utf8               (I)V
  #58 = Utf8               newInstance
  #59 = Utf8               ()Ljava/lang/Object;
{
  Main();
    flags: 
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 2: 0
        line 56: 4

  public static void main(java.lang.String[]);
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: new           #2                  // class Main
         3: dup           
         4: invokespecial #3                  // Method "<init>":()V
         7: astore_1      
         8: ldc_w         #4                  // class Main$S
        11: invokestatic  #5                  // Method get:(Ljava/lang/Class;)LMain$P;
        14: astore_2      
        15: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
        18: aload_2       
        19: getfield      #7                  // Field Main$P.i:I
        22: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
        25: return        
      LineNumberTable:
        line 30: 0
        line 31: 8
        line 32: 15
        line 33: 25

  static <T extends Main$P> T get(java.lang.Class<T>);
    flags: ACC_STATIC
    Code:
      stack=1, locals=3, args_size=1
         0: aconst_null   
         1: astore_1      
         2: aload_0       
         3: invokevirtual #9                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
         6: checkcast     #10                 // class Main$P
         9: astore_1      
        10: goto          14
        13: astore_2      
        14: aload_1       
        15: areturn       
      Exception table:
         from    to  target type
             2    10    13   Class java/lang/InstantiationException
             2    10    13   Class java/lang/IllegalAccessException
      LineNumberTable:
        line 45: 0
        line 47: 2
        line 49: 10
        line 50: 14
      StackMapTable: number_of_entries = 2
           frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class java/lang/Class, class Main$P ]
          stack = [ class java/lang/ReflectiveOperationException ]
           frame_type = 0 /* same */

    Signature: #30                          // <T:LMain$P;>(Ljava/lang/Class<TT;>;)TT;
}
